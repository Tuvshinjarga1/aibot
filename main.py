import os
import openai
from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

# Chatwoot API
CHATWOOT_API_KEY = os.environ["CHATWOOT_API_KEY"]
CHATWOOT_BASE_URL = "https://app.chatwoot.com"
ACCOUNT_ID = os.environ["ACCOUNT_ID"]

# OpenAI / OpenRouter API
ASSISTANT_API_KEY    = os.environ.get("ASSISTANT_API_KEY")    # ChatGPT Assistants v2 key
OPENROUTER_API_KEY   = os.environ.get("OPENROUTER_API_KEY")   # OpenRouter key

# –•—ç—Ä–≤—ç—ç OpenRouter –∞—à–∏–≥–ª–∞—Ö –±–æ–ª base_url —Ç–æ—Ö–∏—Ä—É—É–ª–Ω–∞
if OPENROUTER_API_KEY:
    openai.api_key   = OPENROUTER_API_KEY
    openai.api_base  = "https://api.openrouter.ai/v1"
else:
    openai.api_key   = ASSISTANT_API_KEY  # —ç—Å–≤—ç–ª —à—É—É–¥ OpenAI-–∏–π–Ω –∞–ª–±–∞–Ω —ë—Å–Ω—ã —Ç“Ø–ª—Ö“Ø“Ø—Ä
    # default base_url –Ω—å openai.com —Ç—É–ª ”©”©—Ä—á–ª”©—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π

def ask_ai(message):
    try:
        resp = openai.ChatCompletion.create(
            model="gpt-4o-mini",  # —ç—Å–≤—ç–ª ”©”©—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –º–æ–¥–µ–ª—å
            messages=[
                {"role": "system", "content":
                    "–¢–∞ –∑”©–≤—Ö”©–Ω https://cloud.mn —Å–∞–π—Ç—Ç–∞–π —Ö–æ–ª–±–æ–æ—Ç–æ–π –∞—Å—É—É–ª—Ç–∞–¥ –º–æ–Ω–≥–æ–ª —Ö—ç–ª—ç—ç—Ä —Ç–æ–≤—á –±”©–≥”©”©–¥ “Ø–Ω—ç–Ω –∑”©–≤ —Ö–∞—Ä–∏—É–ª–Ω–∞ —É—É."
                },
                {"role": "user", "content": message}
            ]
        )
        return resp.choices[0].message.content.strip()
    except Exception as e:
        print("‚ùå OpenAI/OpenRouter error:", e)
        return "AI —Å–µ—Ä–≤–µ—Ä—Ç —Ö–æ–ª–±–æ–≥–¥–æ–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π."

def send_to_chatwoot(conversation_id, reply):
    url = f"{CHATWOOT_BASE_URL}/api/v1/accounts/{ACCOUNT_ID}/conversations/{conversation_id}/messages"
    headers = {
        "Content-Type": "application/json",
        "api_access_token": CHATWOOT_API_KEY
    }
    payload = {"content": reply, "message_type": "outgoing"}
    resp = requests.post(url, json=payload, headers=headers)
    print("Chatwoot status:", resp.status_code, resp.text)

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    print("Webhook received:", data)
    if data.get("message_type") != "incoming":
        print("‚õî Skip non-incoming")
        return jsonify({"status": "skipped"})
    message = data["content"]
    conv_id = data["conversation"]["id"]
    ai_reply = ask_ai(message)
    print("üß† AI reply:", ai_reply)
    send_to_chatwoot(conv_id, ai_reply)
    return jsonify({"status": "ok"})

if __name__ == "__main__":
    app.run(port=5000)
