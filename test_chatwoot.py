import os
import requests
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

CHATWOOT_API_KEY = os.getenv("CHATWOOT_API_KEY", "").strip()
ACCOUNT_ID = os.getenv("ACCOUNT_ID", "").strip()
CHATWOOT_BASE_URL = os.getenv("CHATWOOT_BASE_URL", "https://app.chatwoot.com").rstrip("/")

def test_chatwoot_api():
    """Chatwoot API —Ç–æ—Ö–∏—Ä–≥–æ–æ–≥ —à–∞–ª–≥–∞—Ö"""
    print("üîç Chatwoot API —Ç–æ—Ö–∏—Ä–≥–æ–æ–≥ —à–∞–ª–≥–∞–∂ –±–∞–π–Ω–∞...")
    print(f"üìç Base URL: {CHATWOOT_BASE_URL}")
    print(f"üîë API Key: {CHATWOOT_API_KEY[:10]}..." if CHATWOOT_API_KEY else "‚ùå API Key –±–∞–π—Ö–≥“Ø–π")
    print(f"üè¢ Account ID: {ACCOUNT_ID}")
    
    if not CHATWOOT_API_KEY:
        print("‚ùå CHATWOOT_API_KEY —Ç–æ—Ö–∏—Ä—É—É–ª–∞–∞–≥“Ø–π –±–∞–π–Ω–∞!")
        return False
    
    if not ACCOUNT_ID:
        print("‚ùå ACCOUNT_ID —Ç–æ—Ö–∏—Ä—É—É–ª–∞–∞–≥“Ø–π –±–∞–π–Ω–∞!")
        return False
    
    try:
        # Test 1: Account –º—ç–¥—ç—ç–ª—ç–ª –∞–≤–∞—Ö
        print("\nüìã Test 1: Account –º—ç–¥—ç—ç–ª—ç–ª –∞–≤—á –±–∞–π–Ω–∞...")
        url = f"{CHATWOOT_BASE_URL}/api/v1/accounts/{ACCOUNT_ID}"
        headers = {"api_access_token": CHATWOOT_API_KEY}
        
        response = requests.get(url, headers=headers)
        print(f"üìä Response status: {response.status_code}")
        
        if response.status_code == 200:
            account_data = response.json()
            print(f"‚úÖ Account –Ω—ç—Ä: {account_data.get('name', '–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π')}")
            print(f"‚úÖ Account ID: {account_data.get('id', '–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π')}")
        elif response.status_code == 401:
            print("‚ùå 401 Unauthorized - API key –±—É—Ä—É—É –±–∞–π–Ω–∞!")
            print("üí° Chatwoot –¥—ç—ç—Ä Settings > Applications > API Access Tokens —à–∞–ª–≥–∞–Ω–∞ —É—É")
            return False
        elif response.status_code == 404:
            print("‚ùå 404 Not Found - Account ID –±—É—Ä—É—É –±–∞–π–Ω–∞!")
            print("üí° Chatwoot URL-–∞–∞—Å –∑”©–≤ account ID –∞–≤–Ω–∞ —É—É")
            return False
        else:
            print(f"‚ùå –ê–ª–¥–∞–∞: {response.status_code} - {response.text}")
            return False
        
        # Test 2: Conversations –∂–∞–≥—Å–∞–∞–ª—Ç –∞–≤–∞—Ö
        print("\nüìã Test 2: Conversations –∂–∞–≥—Å–∞–∞–ª—Ç –∞–≤—á –±–∞–π–Ω–∞...")
        url = f"{CHATWOOT_BASE_URL}/api/v1/accounts/{ACCOUNT_ID}/conversations"
        response = requests.get(url, headers=headers)
        print(f"üìä Response status: {response.status_code}")
        
        if response.status_code == 200:
            conversations = response.json()
            conv_count = len(conversations.get('data', []))
            print(f"‚úÖ {conv_count} conversation –æ–ª–¥–ª–æ–æ")
        else:
            print(f"‚ö†Ô∏è Conversations –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {response.status_code}")
        
        # Test 3: Inboxes –∂–∞–≥—Å–∞–∞–ª—Ç –∞–≤–∞—Ö
        print("\nüìã Test 3: Inboxes –∂–∞–≥—Å–∞–∞–ª—Ç –∞–≤—á –±–∞–π–Ω–∞...")
        url = f"{CHATWOOT_BASE_URL}/api/v1/accounts/{ACCOUNT_ID}/inboxes"
        response = requests.get(url, headers=headers)
        print(f"üìä Response status: {response.status_code}")
        
        if response.status_code == 200:
            inboxes = response.json()
            print(f"‚úÖ {len(inboxes)} inbox –æ–ª–¥–ª–æ–æ:")
            for inbox in inboxes:
                print(f"   üì• {inbox.get('name')} (ID: {inbox.get('id')}) - {inbox.get('channel_type')}")
        else:
            print(f"‚ö†Ô∏è Inboxes –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {response.status_code}")
        
        print("\n‚úÖ Chatwoot API —Ç–æ—Ö–∏—Ä–≥–æ–æ –∑”©–≤ –±–∞–π–Ω–∞!")
        return True
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Network –∞–ª–¥–∞–∞: {e}")
        print("üí° –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Ö–æ–ª–±–æ–ª—Ç –±–æ–ª–æ–Ω Chatwoot URL —à–∞–ª–≥–∞–Ω–∞ —É—É")
        return False
    except Exception as e:
        print(f"‚ùå –ê–ª–¥–∞–∞: {e}")
        return False

if __name__ == "__main__":
    test_chatwoot_api() 